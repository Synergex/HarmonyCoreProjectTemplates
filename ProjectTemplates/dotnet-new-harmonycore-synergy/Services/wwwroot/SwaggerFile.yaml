# *****************************************************************************
#
#  Title:       SwaggerFile.yaml
# 
#  Description: Describes "Harmony Core Sample API" to Swagger UI
# 
# *****************************************************************************
#  WARNING: GENERATED CODE!
#  This file was generated by CodeGen. Avoid editing the file if possible.
#  Any changes you make will be lost of the file is re-generated.
# *****************************************************************************
# 
swagger: '2.0'

info:
  description: This environment presents an example of using Harmony Core to expose a collection of RESTful Web Service endpoints that allow you to interact with a small sample dataset.
  version: 1.0.0
  title: Harmony Core Sample API

host: 'localhost:8086'
basePath: /odata

schemes:
  - https

consumes:
  - application/json

produces:
  - application/json

tags:
  - name: Customers
    description: Operations related to Customer record

  - name: Orders
    description: Operations related to Orders

  - name: Items
    description: Operations related to Item master record

  - name: OrderItems
    description: Operations related to Order items

  - name: Vendors
    description: Operations related to Vendor record


paths:

  /Customers:

    get:
      summary: Get all customers
      description: Get all or a filtered collection of customers.
      operationId: GetCustomers
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
        - name: $skip
          in: query
          description: Rows to skip before starting to return data.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'CustomerTypes.yaml#/Customer'

  /Customers/$count:

    get:
      summary: Count customers
      description: Count all or a filtered collection of customers.
      operationId: CountCustomers
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Customers(CustomerNumber={aCustomerNumber})':

    get:
      summary: Get a single customer
      description: Get a customer via a complete primary key.
      operationId: GetCustomer
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: aCustomerNumber
          in: path
          description: Customer number
          required: true
          type: integer
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
      responses:
        '200':
          description: OK (the requested customer was found and returned)
          schema:
            $ref: 'CustomerTypes.yaml#/Customer'
        '404':
          description: Not found (the requested customer was not found)

    delete:
      summary: Delete customer
      description: Delete a customer via a complete primary key.
      operationId: DeleteCustomer
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: aCustomerNumber
          in: path
          description: Customer number
          required: true
          type: integer
      responses:
        '204':
          description: No content (the specified customer was deleted)
        '404':
          description: Not found content (the specified customer was not found)

    put:
      summary: Create or update customer
      description: Create or update a customer via a complete primary key.
      operationId: CreateOrUpdateCustomer
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: aCustomerNumber
          in: path
          description: Customer number
          required: true
          type: integer
        - name: aCustomer
          in: body
          description: Data for customer to create or update.
          required: true
          schema:
            $ref: 'CustomerTypes.yaml#/Customer'
      responses:
        '201':
          description: Created (the customer was created)
          schema:
            $ref: 'CustomerTypes.yaml#/Customer'
        '204':
          description: No Content (the customer was updated)
        '400':
          description: Bad request

    patch:
      summary: Patch customer
      description: Patch a customer via complete primary key.
      operationId: PatchCustomer
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: aCustomerNumber
          in: path
          description: Customer number
          required: true
          type: integer
        - name: aPatchDocument
          in: body
          description: JSON patch document describing the changes to make to the customer.
          required: true
          schema:
            $ref: '#/definitions/PatchRequest'
      responses:
        '204':
          description: No content (the specified customer was patched)
        '400':
          description: Bad request
        '404':
          description: Not found (the specified customer was not found)

  '/Customers(State=''{aState}'')':

    get:
      summary: Get customers
      description: Get a customers via complete alternate key State.
      operationId: GetCustomersByKeyState
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: aState
          in: path
          description: State
          required: true
          type: string
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
        - name: $skip
          in: query
          description: Rows to skip before starting to return data.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'CustomerTypes.yaml#/Customer'

  '/Customers(State=''{aState}'')/$count':

    get:
      summary: Count customers
      description: Count customers via complete alternate key State.
      operationId: CountCustomersByKeyState
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: aState
          in: path
          description: State
          required: true
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Customers(ZipCode={aZipCode})':

    get:
      summary: Get customers
      description: Get a customers via complete alternate key Zip.
      operationId: GetCustomersByKeyZip
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: aZipCode
          in: path
          description: Zip code
          required: true
          type: integer
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
        - name: $skip
          in: query
          description: Rows to skip before starting to return data.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'CustomerTypes.yaml#/Customer'

  '/Customers(ZipCode={aZipCode})/$count':

    get:
      summary: Count customers
      description: Count customers via complete alternate key Zip.
      operationId: CountCustomersByKeyZip
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: aZipCode
          in: path
          description: Zip code
          required: true
          type: integer
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Customers(PaymentTermsCode=''{aPaymentTermsCode}'')':

    get:
      summary: Get customers
      description: Get a customers via complete alternate key PaymentTerms.
      operationId: GetCustomersByKeyPaymentTerms
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: aPaymentTermsCode
          in: path
          description: Payment terms code
          required: true
          type: string
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
        - name: $skip
          in: query
          description: Rows to skip before starting to return data.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'CustomerTypes.yaml#/Customer'

  '/Customers(PaymentTermsCode=''{aPaymentTermsCode}'')/$count':

    get:
      summary: Count customers
      description: Count customers via complete alternate key PaymentTerms.
      operationId: CountCustomersByKeyPaymentTerms
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: aPaymentTermsCode
          in: path
          description: Payment terms code
          required: true
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Customers({key})/Name':

    get:
      summary: Get customer property Name
      description: Get customer property Name via complete primary key.
      operationId: CustomerName
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: key
          in: path
          description: Customer number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected customer was founn and the requested property was returned)
          schema:
            type: string
        '404':
          description: Not found (the specified customer was not found)

  '/Customers({key})/Street':

    get:
      summary: Get customer property Street
      description: Get customer property Street via complete primary key.
      operationId: CustomerStreet
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: key
          in: path
          description: Customer number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected customer was founn and the requested property was returned)
          schema:
            type: string
        '404':
          description: Not found (the specified customer was not found)

  '/Customers({key})/City':

    get:
      summary: Get customer property City
      description: Get customer property City via complete primary key.
      operationId: CustomerCity
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: key
          in: path
          description: Customer number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected customer was founn and the requested property was returned)
          schema:
            type: string
        '404':
          description: Not found (the specified customer was not found)

  '/Customers({key})/State':

    get:
      summary: Get customer property State
      description: Get customer property State via complete primary key.
      operationId: CustomerState
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: key
          in: path
          description: Customer number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected customer was founn and the requested property was returned)
          schema:
            type: string
        '404':
          description: Not found (the specified customer was not found)

  '/Customers({key})/ZipCode':

    get:
      summary: Get customer property ZipCode
      description: Get customer property ZipCode via complete primary key.
      operationId: CustomerZipCode
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: key
          in: path
          description: Customer number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected customer was founn and the requested property was returned)
          schema:
            type: integer
        '404':
          description: Not found (the specified customer was not found)

  '/Customers({key})/Contact':

    get:
      summary: Get customer property Contact
      description: Get customer property Contact via complete primary key.
      operationId: CustomerContact
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: key
          in: path
          description: Customer number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected customer was founn and the requested property was returned)
          schema:
            type: string
        '404':
          description: Not found (the specified customer was not found)

  '/Customers({key})/Phone':

    get:
      summary: Get customer property Phone
      description: Get customer property Phone via complete primary key.
      operationId: CustomerPhone
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: key
          in: path
          description: Customer number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected customer was founn and the requested property was returned)
          schema:
            type: integer
        '404':
          description: Not found (the specified customer was not found)

  '/Customers({key})/Fax':

    get:
      summary: Get customer property Fax
      description: Get customer property Fax via complete primary key.
      operationId: CustomerFax
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: key
          in: path
          description: Customer number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected customer was founn and the requested property was returned)
          schema:
            type: integer
        '404':
          description: Not found (the specified customer was not found)

  '/Customers({key})/FavoriteItem':

    get:
      summary: Get customer property FavoriteItem
      description: Get customer property FavoriteItem via complete primary key.
      operationId: CustomerFavoriteItem
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: key
          in: path
          description: Customer number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected customer was founn and the requested property was returned)
          schema:
            type: integer
        '404':
          description: Not found (the specified customer was not found)

  '/Customers({key})/PaymentTermsCode':

    get:
      summary: Get customer property PaymentTermsCode
      description: Get customer property PaymentTermsCode via complete primary key.
      operationId: CustomerPaymentTermsCode
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: key
          in: path
          description: Customer number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected customer was founn and the requested property was returned)
          schema:
            type: string
        '404':
          description: Not found (the specified customer was not found)

  '/Customers({key})/TaxId':

    get:
      summary: Get customer property TaxId
      description: Get customer property TaxId via complete primary key.
      operationId: CustomerTaxId
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: key
          in: path
          description: Customer number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected customer was founn and the requested property was returned)
          schema:
            type: integer
        '404':
          description: Not found (the specified customer was not found)

  '/Customers({key})/CreditLimit':

    get:
      summary: Get customer property CreditLimit
      description: Get customer property CreditLimit via complete primary key.
      operationId: CustomerCreditLimit
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: key
          in: path
          description: Customer number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected customer was founn and the requested property was returned)
          schema:
            type: number
        '404':
          description: Not found (the specified customer was not found)

  /Orders:

    get:
      summary: Get all orders
      description: Get all or a filtered collection of orders.
      operationId: GetOrders
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
        - name: $skip
          in: query
          description: Rows to skip before starting to return data.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'OrderTypes.yaml#/Order'

  /Orders/$count:

    get:
      summary: Count orders
      description: Count all or a filtered collection of orders.
      operationId: CountOrders
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Orders(OrderNumber={aOrderNumber})':

    get:
      summary: Get a single order
      description: Get a order via a complete primary key.
      operationId: GetOrder
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: aOrderNumber
          in: path
          description: Order number
          required: true
          type: integer
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
      responses:
        '200':
          description: OK (the requested order was found and returned)
          schema:
            $ref: 'OrderTypes.yaml#/Order'
        '404':
          description: Not found (the requested order was not found)

    delete:
      summary: Delete order
      description: Delete a order via a complete primary key.
      operationId: DeleteOrder
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: aOrderNumber
          in: path
          description: Order number
          required: true
          type: integer
      responses:
        '204':
          description: No content (the specified order was deleted)
        '404':
          description: Not found content (the specified order was not found)

    put:
      summary: Create or update order
      description: Create or update a order via a complete primary key.
      operationId: CreateOrUpdateOrder
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: aOrderNumber
          in: path
          description: Order number
          required: true
          type: integer
        - name: aOrder
          in: body
          description: Data for order to create or update.
          required: true
          schema:
            $ref: 'OrderTypes.yaml#/Order'
      responses:
        '201':
          description: Created (the order was created)
          schema:
            $ref: 'OrderTypes.yaml#/Order'
        '204':
          description: No Content (the order was updated)
        '400':
          description: Bad request

    patch:
      summary: Patch order
      description: Patch a order via complete primary key.
      operationId: PatchOrder
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: aOrderNumber
          in: path
          description: Order number
          required: true
          type: integer
        - name: aPatchDocument
          in: body
          description: JSON patch document describing the changes to make to the order.
          required: true
          schema:
            $ref: '#/definitions/PatchRequest'
      responses:
        '204':
          description: No content (the specified order was patched)
        '400':
          description: Bad request
        '404':
          description: Not found (the specified order was not found)

  '/Orders(CustomerNumber={aCustomerNumber})':

    get:
      summary: Get orders
      description: Get a orders via complete alternate key CustomerNumber.
      operationId: GetOrdersByKeyCustomerNumber
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: aCustomerNumber
          in: path
          description: Customer number
          required: true
          type: integer
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
        - name: $skip
          in: query
          description: Rows to skip before starting to return data.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'OrderTypes.yaml#/Order'

  '/Orders(CustomerNumber={aCustomerNumber})/$count':

    get:
      summary: Count orders
      description: Count orders via complete alternate key CustomerNumber.
      operationId: CountOrdersByKeyCustomerNumber
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: aCustomerNumber
          in: path
          description: Customer number
          required: true
          type: integer
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Orders(DateOrdered={aDateOrdered})':

    get:
      summary: Get orders
      description: Get a orders via complete alternate key DateOrdered.
      operationId: GetOrdersByKeyDateOrdered
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: aDateOrdered
          in: path
          description: Date ordered
          required: true
          type: string
          format: date-time
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
        - name: $skip
          in: query
          description: Rows to skip before starting to return data.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'OrderTypes.yaml#/Order'

  '/Orders(DateOrdered={aDateOrdered})/$count':

    get:
      summary: Count orders
      description: Count orders via complete alternate key DateOrdered.
      operationId: CountOrdersByKeyDateOrdered
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: aDateOrdered
          in: path
          description: Date ordered
          required: true
          type: string
          format: date-time
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Orders(DateCompleted={aDateCompleted})':

    get:
      summary: Get orders
      description: Get a orders via complete alternate key DateCompleted.
      operationId: GetOrdersByKeyDateCompleted
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: aDateCompleted
          in: path
          description: Date order completed
          required: true
          type: string
          format: date-time
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
        - name: $skip
          in: query
          description: Rows to skip before starting to return data.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'OrderTypes.yaml#/Order'

  '/Orders(DateCompleted={aDateCompleted})/$count':

    get:
      summary: Count orders
      description: Count orders via complete alternate key DateCompleted.
      operationId: CountOrdersByKeyDateCompleted
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: aDateCompleted
          in: path
          description: Date order completed
          required: true
          type: string
          format: date-time
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Orders({key})/CustomerNumber':

    get:
      summary: Get order property CustomerNumber
      description: Get order property CustomerNumber via complete primary key.
      operationId: OrderCustomerNumber
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: key
          in: path
          description: Order number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected order was founn and the requested property was returned)
          schema:
            type: integer
        '404':
          description: Not found (the specified order was not found)

  '/Orders({key})/PlacedBy':

    get:
      summary: Get order property PlacedBy
      description: Get order property PlacedBy via complete primary key.
      operationId: OrderPlacedBy
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: key
          in: path
          description: Order number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected order was founn and the requested property was returned)
          schema:
            type: string
        '404':
          description: Not found (the specified order was not found)

  '/Orders({key})/CustomerReference':

    get:
      summary: Get order property CustomerReference
      description: Get order property CustomerReference via complete primary key.
      operationId: OrderCustomerReference
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: key
          in: path
          description: Order number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected order was founn and the requested property was returned)
          schema:
            type: string
        '404':
          description: Not found (the specified order was not found)

  '/Orders({key})/PaymentTermsCode':

    get:
      summary: Get order property PaymentTermsCode
      description: Get order property PaymentTermsCode via complete primary key.
      operationId: OrderPaymentTermsCode
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: key
          in: path
          description: Order number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected order was founn and the requested property was returned)
          schema:
            type: string
        '404':
          description: Not found (the specified order was not found)

  '/Orders({key})/DateOrdered':

    get:
      summary: Get order property DateOrdered
      description: Get order property DateOrdered via complete primary key.
      operationId: OrderDateOrdered
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: key
          in: path
          description: Order number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected order was founn and the requested property was returned)
          schema:
            type: string
        '404':
          description: Not found (the specified order was not found)

  '/Orders({key})/DateCompleted':

    get:
      summary: Get order property DateCompleted
      description: Get order property DateCompleted via complete primary key.
      operationId: OrderDateCompleted
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: key
          in: path
          description: Order number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected order was founn and the requested property was returned)
          schema:
            type: string
        '404':
          description: Not found (the specified order was not found)

  /Items:

    get:
      summary: Get all items
      description: Get all or a filtered collection of items.
      operationId: GetItems
      deprecated: false
      tags:
        - Items
      parameters:
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
        - name: $skip
          in: query
          description: Rows to skip before starting to return data.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'ItemTypes.yaml#/Item'

  /Items/$count:

    get:
      summary: Count items
      description: Count all or a filtered collection of items.
      operationId: CountItems
      deprecated: false
      tags:
        - Items
      parameters:
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Items(ItemNumber={aItemNumber})':

    get:
      summary: Get a single item
      description: Get a item via a complete primary key.
      operationId: GetItem
      deprecated: false
      tags:
        - Items
      parameters:
        - name: aItemNumber
          in: path
          description: Item number
          required: true
          type: integer
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
      responses:
        '200':
          description: OK (the requested item was found and returned)
          schema:
            $ref: 'ItemTypes.yaml#/Item'
        '404':
          description: Not found (the requested item was not found)

    delete:
      summary: Delete item
      description: Delete a item via a complete primary key.
      operationId: DeleteItem
      deprecated: false
      tags:
        - Items
      parameters:
        - name: aItemNumber
          in: path
          description: Item number
          required: true
          type: integer
      responses:
        '204':
          description: No content (the specified item was deleted)
        '404':
          description: Not found content (the specified item was not found)

    put:
      summary: Create or update item
      description: Create or update a item via a complete primary key.
      operationId: CreateOrUpdateItem
      deprecated: false
      tags:
        - Items
      parameters:
        - name: aItemNumber
          in: path
          description: Item number
          required: true
          type: integer
        - name: aItem
          in: body
          description: Data for item to create or update.
          required: true
          schema:
            $ref: 'ItemTypes.yaml#/Item'
      responses:
        '201':
          description: Created (the item was created)
          schema:
            $ref: 'ItemTypes.yaml#/Item'
        '204':
          description: No Content (the item was updated)
        '400':
          description: Bad request

    patch:
      summary: Patch item
      description: Patch a item via complete primary key.
      operationId: PatchItem
      deprecated: false
      tags:
        - Items
      parameters:
        - name: aItemNumber
          in: path
          description: Item number
          required: true
          type: integer
        - name: aPatchDocument
          in: body
          description: JSON patch document describing the changes to make to the item.
          required: true
          schema:
            $ref: '#/definitions/PatchRequest'
      responses:
        '204':
          description: No content (the specified item was patched)
        '400':
          description: Bad request
        '404':
          description: Not found (the specified item was not found)

  '/Items(VendorNumber={aVendorNumber})':

    get:
      summary: Get items
      description: Get a items via complete alternate key VendorNumber.
      operationId: GetItemsByKeyVendorNumber
      deprecated: false
      tags:
        - Items
      parameters:
        - name: aVendorNumber
          in: path
          description: Vendor number
          required: true
          type: integer
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
        - name: $skip
          in: query
          description: Rows to skip before starting to return data.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'ItemTypes.yaml#/Item'

  '/Items(VendorNumber={aVendorNumber})/$count':

    get:
      summary: Count items
      description: Count items via complete alternate key VendorNumber.
      operationId: CountItemsByKeyVendorNumber
      deprecated: false
      tags:
        - Items
      parameters:
        - name: aVendorNumber
          in: path
          description: Vendor number
          required: true
          type: integer
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Items(FlowerColor=''{aFlowerColor}'')':

    get:
      summary: Get items
      description: Get a items via complete alternate key Color.
      operationId: GetItemsByKeyColor
      deprecated: false
      tags:
        - Items
      parameters:
        - name: aFlowerColor
          in: path
          description: Flower color
          required: true
          type: string
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
        - name: $skip
          in: query
          description: Rows to skip before starting to return data.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'ItemTypes.yaml#/Item'

  '/Items(FlowerColor=''{aFlowerColor}'')/$count':

    get:
      summary: Count items
      description: Count items via complete alternate key Color.
      operationId: CountItemsByKeyColor
      deprecated: false
      tags:
        - Items
      parameters:
        - name: aFlowerColor
          in: path
          description: Flower color
          required: true
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Items(Size={aSize})':

    get:
      summary: Get items
      description: Get a items via complete alternate key Size.
      operationId: GetItemsByKeySize
      deprecated: false
      tags:
        - Items
      parameters:
        - name: aSize
          in: path
          description: Size in gallons
          required: true
          type: integer
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
        - name: $skip
          in: query
          description: Rows to skip before starting to return data.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'ItemTypes.yaml#/Item'

  '/Items(Size={aSize})/$count':

    get:
      summary: Count items
      description: Count items via complete alternate key Size.
      operationId: CountItemsByKeySize
      deprecated: false
      tags:
        - Items
      parameters:
        - name: aSize
          in: path
          description: Size in gallons
          required: true
          type: integer
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Items(CommonName=''{aCommonName}'')':

    get:
      summary: Get items
      description: Get a items via complete alternate key Name.
      operationId: GetItemsByKeyName
      deprecated: false
      tags:
        - Items
      parameters:
        - name: aCommonName
          in: path
          description: Common name
          required: true
          type: string
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
        - name: $skip
          in: query
          description: Rows to skip before starting to return data.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'ItemTypes.yaml#/Item'

  '/Items(CommonName=''{aCommonName}'')/$count':

    get:
      summary: Count items
      description: Count items via complete alternate key Name.
      operationId: CountItemsByKeyName
      deprecated: false
      tags:
        - Items
      parameters:
        - name: aCommonName
          in: path
          description: Common name
          required: true
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Items({key})/VendorNumber':

    get:
      summary: Get item property VendorNumber
      description: Get item property VendorNumber via complete primary key.
      operationId: ItemVendorNumber
      deprecated: false
      tags:
        - Items
      parameters:
        - name: key
          in: path
          description: Item number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected item was founn and the requested property was returned)
          schema:
            type: integer
        '404':
          description: Not found (the specified item was not found)

  '/Items({key})/Size':

    get:
      summary: Get item property Size
      description: Get item property Size via complete primary key.
      operationId: ItemSize
      deprecated: false
      tags:
        - Items
      parameters:
        - name: key
          in: path
          description: Item number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected item was founn and the requested property was returned)
          schema:
            type: integer
        '404':
          description: Not found (the specified item was not found)

  '/Items({key})/CommonName':

    get:
      summary: Get item property CommonName
      description: Get item property CommonName via complete primary key.
      operationId: ItemCommonName
      deprecated: false
      tags:
        - Items
      parameters:
        - name: key
          in: path
          description: Item number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected item was founn and the requested property was returned)
          schema:
            type: string
        '404':
          description: Not found (the specified item was not found)

  '/Items({key})/LatinName':

    get:
      summary: Get item property LatinName
      description: Get item property LatinName via complete primary key.
      operationId: ItemLatinName
      deprecated: false
      tags:
        - Items
      parameters:
        - name: key
          in: path
          description: Item number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected item was founn and the requested property was returned)
          schema:
            type: string
        '404':
          description: Not found (the specified item was not found)

  '/Items({key})/ZoneCode':

    get:
      summary: Get item property ZoneCode
      description: Get item property ZoneCode via complete primary key.
      operationId: ItemZoneCode
      deprecated: false
      tags:
        - Items
      parameters:
        - name: key
          in: path
          description: Item number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected item was founn and the requested property was returned)
          schema:
            type: integer
        '404':
          description: Not found (the specified item was not found)

  '/Items({key})/Type':

    get:
      summary: Get item property Type
      description: Get item property Type via complete primary key.
      operationId: ItemType
      deprecated: false
      tags:
        - Items
      parameters:
        - name: key
          in: path
          description: Item number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected item was founn and the requested property was returned)
          schema:
            type: integer
        '404':
          description: Not found (the specified item was not found)

  '/Items({key})/Flowering':

    get:
      summary: Get item property Flowering
      description: Get item property Flowering via complete primary key.
      operationId: ItemFlowering
      deprecated: false
      tags:
        - Items
      parameters:
        - name: key
          in: path
          description: Item number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected item was founn and the requested property was returned)
          schema:
            type: string
        '404':
          description: Not found (the specified item was not found)

  '/Items({key})/FlowerColor':

    get:
      summary: Get item property FlowerColor
      description: Get item property FlowerColor via complete primary key.
      operationId: ItemFlowerColor
      deprecated: false
      tags:
        - Items
      parameters:
        - name: key
          in: path
          description: Item number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected item was founn and the requested property was returned)
          schema:
            type: string
        '404':
          description: Not found (the specified item was not found)

  '/Items({key})/Shape':

    get:
      summary: Get item property Shape
      description: Get item property Shape via complete primary key.
      operationId: ItemShape
      deprecated: false
      tags:
        - Items
      parameters:
        - name: key
          in: path
          description: Item number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected item was founn and the requested property was returned)
          schema:
            type: string
        '404':
          description: Not found (the specified item was not found)

  '/Items({key})/MaxHeight':

    get:
      summary: Get item property MaxHeight
      description: Get item property MaxHeight via complete primary key.
      operationId: ItemMaxHeight
      deprecated: false
      tags:
        - Items
      parameters:
        - name: key
          in: path
          description: Item number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected item was founn and the requested property was returned)
          schema:
            type: integer
        '404':
          description: Not found (the specified item was not found)

  '/Items({key})/MaxWidth':

    get:
      summary: Get item property MaxWidth
      description: Get item property MaxWidth via complete primary key.
      operationId: ItemMaxWidth
      deprecated: false
      tags:
        - Items
      parameters:
        - name: key
          in: path
          description: Item number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected item was founn and the requested property was returned)
          schema:
            type: integer
        '404':
          description: Not found (the specified item was not found)

  '/Items({key})/WaterRequirement':

    get:
      summary: Get item property WaterRequirement
      description: Get item property WaterRequirement via complete primary key.
      operationId: ItemWaterRequirement
      deprecated: false
      tags:
        - Items
      parameters:
        - name: key
          in: path
          description: Item number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected item was founn and the requested property was returned)
          schema:
            type: string
        '404':
          description: Not found (the specified item was not found)

  '/Items({key})/SunRequirement':

    get:
      summary: Get item property SunRequirement
      description: Get item property SunRequirement via complete primary key.
      operationId: ItemSunRequirement
      deprecated: false
      tags:
        - Items
      parameters:
        - name: key
          in: path
          description: Item number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected item was founn and the requested property was returned)
          schema:
            type: string
        '404':
          description: Not found (the specified item was not found)

  '/Items({key})/BinLocation':

    get:
      summary: Get item property BinLocation
      description: Get item property BinLocation via complete primary key.
      operationId: ItemBinLocation
      deprecated: false
      tags:
        - Items
      parameters:
        - name: key
          in: path
          description: Item number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected item was founn and the requested property was returned)
          schema:
            type: string
        '404':
          description: Not found (the specified item was not found)

  '/Items({key})/QtyOnHand':

    get:
      summary: Get item property QtyOnHand
      description: Get item property QtyOnHand via complete primary key.
      operationId: ItemQtyOnHand
      deprecated: false
      tags:
        - Items
      parameters:
        - name: key
          in: path
          description: Item number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected item was founn and the requested property was returned)
          schema:
            type: integer
        '404':
          description: Not found (the specified item was not found)

  '/Items({key})/QtyAllocated':

    get:
      summary: Get item property QtyAllocated
      description: Get item property QtyAllocated via complete primary key.
      operationId: ItemQtyAllocated
      deprecated: false
      tags:
        - Items
      parameters:
        - name: key
          in: path
          description: Item number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected item was founn and the requested property was returned)
          schema:
            type: integer
        '404':
          description: Not found (the specified item was not found)

  '/Items({key})/QtyOnOrder':

    get:
      summary: Get item property QtyOnOrder
      description: Get item property QtyOnOrder via complete primary key.
      operationId: ItemQtyOnOrder
      deprecated: false
      tags:
        - Items
      parameters:
        - name: key
          in: path
          description: Item number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected item was founn and the requested property was returned)
          schema:
            type: integer
        '404':
          description: Not found (the specified item was not found)

  '/Items({key})/ReorderLevel':

    get:
      summary: Get item property ReorderLevel
      description: Get item property ReorderLevel via complete primary key.
      operationId: ItemReorderLevel
      deprecated: false
      tags:
        - Items
      parameters:
        - name: key
          in: path
          description: Item number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected item was founn and the requested property was returned)
          schema:
            type: integer
        '404':
          description: Not found (the specified item was not found)

  '/Items({key})/UnitPrice':

    get:
      summary: Get item property UnitPrice
      description: Get item property UnitPrice via complete primary key.
      operationId: ItemUnitPrice
      deprecated: false
      tags:
        - Items
      parameters:
        - name: key
          in: path
          description: Item number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected item was founn and the requested property was returned)
          schema:
            type: number
        '404':
          description: Not found (the specified item was not found)

  '/Items({key})/CostPrice':

    get:
      summary: Get item property CostPrice
      description: Get item property CostPrice via complete primary key.
      operationId: ItemCostPrice
      deprecated: false
      tags:
        - Items
      parameters:
        - name: key
          in: path
          description: Item number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected item was founn and the requested property was returned)
          schema:
            type: number
        '404':
          description: Not found (the specified item was not found)

  /OrderItems:

    get:
      summary: Get all orderItems
      description: Get all or a filtered collection of orderItems.
      operationId: GetOrderItems
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
        - name: $skip
          in: query
          description: Rows to skip before starting to return data.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'OrderItemTypes.yaml#/OrderItem'

  /OrderItems/$count:

    get:
      summary: Count orderItems
      description: Count all or a filtered collection of orderItems.
      operationId: CountOrderItems
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/OrderItems(OrderNumber={aOrderNumber},ItemNumber={aItemNumber})':

    get:
      summary: Get a single orderItem
      description: Get a orderItem via a complete primary key.
      operationId: GetOrderItem
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: aOrderNumber
          in: path
          description: Order number
          required: true
          type: integer
        - name: aItemNumber
          in: path
          description: Line item number
          required: true
          type: integer
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
      responses:
        '200':
          description: OK (the requested orderItem was found and returned)
          schema:
            $ref: 'OrderItemTypes.yaml#/OrderItem'
        '404':
          description: Not found (the requested orderItem was not found)

    delete:
      summary: Delete orderItem
      description: Delete a orderItem via a complete primary key.
      operationId: DeleteOrderItem
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: aOrderNumber
          in: path
          description: Order number
          required: true
          type: integer
        - name: aItemNumber
          in: path
          description: Line item number
          required: true
          type: integer
      responses:
        '204':
          description: No content (the specified orderItem was deleted)
        '404':
          description: Not found content (the specified orderItem was not found)

    put:
      summary: Create or update orderItem
      description: Create or update a orderItem via a complete primary key.
      operationId: CreateOrUpdateOrderItem
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: aOrderNumber
          in: path
          description: Order number
          required: true
          type: integer
        - name: aItemNumber
          in: path
          description: Line item number
          required: true
          type: integer
        - name: aOrderItem
          in: body
          description: Data for orderItem to create or update.
          required: true
          schema:
            $ref: 'OrderItemTypes.yaml#/OrderItem'
      responses:
        '201':
          description: Created (the orderItem was created)
          schema:
            $ref: 'OrderItemTypes.yaml#/OrderItem'
        '204':
          description: No Content (the orderItem was updated)
        '400':
          description: Bad request

    patch:
      summary: Patch orderItem
      description: Patch a orderItem via complete primary key.
      operationId: PatchOrderItem
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: aOrderNumber
          in: path
          description: Order number
          required: true
          type: integer
        - name: aItemNumber
          in: path
          description: Line item number
          required: true
          type: integer
        - name: aPatchDocument
          in: body
          description: JSON patch document describing the changes to make to the orderItem.
          required: true
          schema:
            $ref: '#/definitions/PatchRequest'
      responses:
        '204':
          description: No content (the specified orderItem was patched)
        '400':
          description: Bad request
        '404':
          description: Not found (the specified orderItem was not found)

  '/OrderItems(ItemOrdered={aItemOrdered})':

    get:
      summary: Get orderItems
      description: Get a orderItems via complete alternate key ItemOrdered.
      operationId: GetOrderItemsByKeyItemOrdered
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: aItemOrdered
          in: path
          description: Item ordered
          required: true
          type: integer
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
        - name: $skip
          in: query
          description: Rows to skip before starting to return data.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'OrderItemTypes.yaml#/OrderItem'

  '/OrderItems(ItemOrdered={aItemOrdered})/$count':

    get:
      summary: Count orderItems
      description: Count orderItems via complete alternate key ItemOrdered.
      operationId: CountOrderItemsByKeyItemOrdered
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: aItemOrdered
          in: path
          description: Item ordered
          required: true
          type: integer
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/OrderItems(DateShipped={aDateShipped})':

    get:
      summary: Get orderItems
      description: Get a orderItems via complete alternate key DateShipped.
      operationId: GetOrderItemsByKeyDateShipped
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: aDateShipped
          in: path
          description: Date shipped
          required: true
          type: string
          format: date-time
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
        - name: $skip
          in: query
          description: Rows to skip before starting to return data.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'OrderItemTypes.yaml#/OrderItem'

  '/OrderItems(DateShipped={aDateShipped})/$count':

    get:
      summary: Count orderItems
      description: Count orderItems via complete alternate key DateShipped.
      operationId: CountOrderItemsByKeyDateShipped
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: aDateShipped
          in: path
          description: Date shipped
          required: true
          type: string
          format: date-time
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/OrderItems(InvoiceNumber={aInvoiceNumber})':

    get:
      summary: Get orderItems
      description: Get a orderItems via complete alternate key InvoiceNumber.
      operationId: GetOrderItemsByKeyInvoiceNumber
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: aInvoiceNumber
          in: path
          description: Invoice number
          required: true
          type: integer
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
        - name: $skip
          in: query
          description: Rows to skip before starting to return data.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'OrderItemTypes.yaml#/OrderItem'

  '/OrderItems(InvoiceNumber={aInvoiceNumber})/$count':

    get:
      summary: Count orderItems
      description: Count orderItems via complete alternate key InvoiceNumber.
      operationId: CountOrderItemsByKeyInvoiceNumber
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: aInvoiceNumber
          in: path
          description: Invoice number
          required: true
          type: integer
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/OrderItems(OrderNumber={aOrderNumber},ItemNumber={aItemNumber})/ItemOrdered':

    get:
      summary: Get orderItem property ItemOrdered
      description: Get orderItem property ItemOrdered via complete primary key.
      operationId: OrderItemItemOrdered
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: aOrderNumber
          in: path
          description: Order number
          required: true
          type: integer
        - name: aItemNumber
          in: path
          description: Line item number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected orderItem was founn and the requested property was returned)
          schema:
            type: integer
        '404':
          description: Not found (the specified orderItem was not found)

  '/OrderItems(OrderNumber={aOrderNumber},ItemNumber={aItemNumber})/QuantityOrdered':

    get:
      summary: Get orderItem property QuantityOrdered
      description: Get orderItem property QuantityOrdered via complete primary key.
      operationId: OrderItemQuantityOrdered
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: aOrderNumber
          in: path
          description: Order number
          required: true
          type: integer
        - name: aItemNumber
          in: path
          description: Line item number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected orderItem was founn and the requested property was returned)
          schema:
            type: integer
        '404':
          description: Not found (the specified orderItem was not found)

  '/OrderItems(OrderNumber={aOrderNumber},ItemNumber={aItemNumber})/UnitPrice':

    get:
      summary: Get orderItem property UnitPrice
      description: Get orderItem property UnitPrice via complete primary key.
      operationId: OrderItemUnitPrice
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: aOrderNumber
          in: path
          description: Order number
          required: true
          type: integer
        - name: aItemNumber
          in: path
          description: Line item number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected orderItem was founn and the requested property was returned)
          schema:
            type: number
        '404':
          description: Not found (the specified orderItem was not found)

  '/OrderItems(OrderNumber={aOrderNumber},ItemNumber={aItemNumber})/DateShipped':

    get:
      summary: Get orderItem property DateShipped
      description: Get orderItem property DateShipped via complete primary key.
      operationId: OrderItemDateShipped
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: aOrderNumber
          in: path
          description: Order number
          required: true
          type: integer
        - name: aItemNumber
          in: path
          description: Line item number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected orderItem was founn and the requested property was returned)
          schema:
            type: string
        '404':
          description: Not found (the specified orderItem was not found)

  '/OrderItems(OrderNumber={aOrderNumber},ItemNumber={aItemNumber})/InvoiceNumber':

    get:
      summary: Get orderItem property InvoiceNumber
      description: Get orderItem property InvoiceNumber via complete primary key.
      operationId: OrderItemInvoiceNumber
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: aOrderNumber
          in: path
          description: Order number
          required: true
          type: integer
        - name: aItemNumber
          in: path
          description: Line item number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected orderItem was founn and the requested property was returned)
          schema:
            type: integer
        '404':
          description: Not found (the specified orderItem was not found)

  /Vendors:

    get:
      summary: Get all vendors
      description: Get all or a filtered collection of vendors.
      operationId: GetVendors
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
        - name: $skip
          in: query
          description: Rows to skip before starting to return data.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'VendorTypes.yaml#/Vendor'

  /Vendors/$count:

    get:
      summary: Count vendors
      description: Count all or a filtered collection of vendors.
      operationId: CountVendors
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Vendors(VendorNumber={aVendorNumber})':

    get:
      summary: Get a single vendor
      description: Get a vendor via a complete primary key.
      operationId: GetVendor
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: aVendorNumber
          in: path
          description: Vendor number
          required: true
          type: integer
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
      responses:
        '200':
          description: OK (the requested vendor was found and returned)
          schema:
            $ref: 'VendorTypes.yaml#/Vendor'
        '404':
          description: Not found (the requested vendor was not found)

    delete:
      summary: Delete vendor
      description: Delete a vendor via a complete primary key.
      operationId: DeleteVendor
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: aVendorNumber
          in: path
          description: Vendor number
          required: true
          type: integer
      responses:
        '204':
          description: No content (the specified vendor was deleted)
        '404':
          description: Not found content (the specified vendor was not found)

    put:
      summary: Create or update vendor
      description: Create or update a vendor via a complete primary key.
      operationId: CreateOrUpdateVendor
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: aVendorNumber
          in: path
          description: Vendor number
          required: true
          type: integer
        - name: aVendor
          in: body
          description: Data for vendor to create or update.
          required: true
          schema:
            $ref: 'VendorTypes.yaml#/Vendor'
      responses:
        '201':
          description: Created (the vendor was created)
          schema:
            $ref: 'VendorTypes.yaml#/Vendor'
        '204':
          description: No Content (the vendor was updated)
        '400':
          description: Bad request

    patch:
      summary: Patch vendor
      description: Patch a vendor via complete primary key.
      operationId: PatchVendor
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: aVendorNumber
          in: path
          description: Vendor number
          required: true
          type: integer
        - name: aPatchDocument
          in: body
          description: JSON patch document describing the changes to make to the vendor.
          required: true
          schema:
            $ref: '#/definitions/PatchRequest'
      responses:
        '204':
          description: No content (the specified vendor was patched)
        '400':
          description: Bad request
        '404':
          description: Not found (the specified vendor was not found)

  '/Vendors(State=''{aState}'')':

    get:
      summary: Get vendors
      description: Get a vendors via complete alternate key State.
      operationId: GetVendorsByKeyState
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: aState
          in: path
          description: State
          required: true
          type: string
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
        - name: $skip
          in: query
          description: Rows to skip before starting to return data.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'VendorTypes.yaml#/Vendor'

  '/Vendors(State=''{aState}'')/$count':

    get:
      summary: Count vendors
      description: Count vendors via complete alternate key State.
      operationId: CountVendorsByKeyState
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: aState
          in: path
          description: State
          required: true
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Vendors(ZipCode={aZipCode})':

    get:
      summary: Get vendors
      description: Get a vendors via complete alternate key Zip.
      operationId: GetVendorsByKeyZip
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: aZipCode
          in: path
          description: Zip Code
          required: true
          type: integer
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
        - name: $skip
          in: query
          description: Rows to skip before starting to return data.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'VendorTypes.yaml#/Vendor'

  '/Vendors(ZipCode={aZipCode})/$count':

    get:
      summary: Count vendors
      description: Count vendors via complete alternate key Zip.
      operationId: CountVendorsByKeyZip
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: aZipCode
          in: path
          description: Zip Code
          required: true
          type: integer
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Vendors(PaymentTermsCode=''{aPaymentTermsCode}'')':

    get:
      summary: Get vendors
      description: Get a vendors via complete alternate key PaymentTerms.
      operationId: GetVendorsByKeyPaymentTerms
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: aPaymentTermsCode
          in: path
          description: Payment terms code
          required: true
          type: string
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
        - name: $skip
          in: query
          description: Rows to skip before starting to return data.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'VendorTypes.yaml#/Vendor'

  '/Vendors(PaymentTermsCode=''{aPaymentTermsCode}'')/$count':

    get:
      summary: Count vendors
      description: Count vendors via complete alternate key PaymentTerms.
      operationId: CountVendorsByKeyPaymentTerms
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: aPaymentTermsCode
          in: path
          description: Payment terms code
          required: true
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Vendors({key})/Name':

    get:
      summary: Get vendor property Name
      description: Get vendor property Name via complete primary key.
      operationId: VendorName
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: key
          in: path
          description: Vendor number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected vendor was founn and the requested property was returned)
          schema:
            type: string
        '404':
          description: Not found (the specified vendor was not found)

  '/Vendors({key})/Street':

    get:
      summary: Get vendor property Street
      description: Get vendor property Street via complete primary key.
      operationId: VendorStreet
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: key
          in: path
          description: Vendor number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected vendor was founn and the requested property was returned)
          schema:
            type: string
        '404':
          description: Not found (the specified vendor was not found)

  '/Vendors({key})/City':

    get:
      summary: Get vendor property City
      description: Get vendor property City via complete primary key.
      operationId: VendorCity
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: key
          in: path
          description: Vendor number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected vendor was founn and the requested property was returned)
          schema:
            type: string
        '404':
          description: Not found (the specified vendor was not found)

  '/Vendors({key})/State':

    get:
      summary: Get vendor property State
      description: Get vendor property State via complete primary key.
      operationId: VendorState
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: key
          in: path
          description: Vendor number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected vendor was founn and the requested property was returned)
          schema:
            type: string
        '404':
          description: Not found (the specified vendor was not found)

  '/Vendors({key})/ZipCode':

    get:
      summary: Get vendor property ZipCode
      description: Get vendor property ZipCode via complete primary key.
      operationId: VendorZipCode
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: key
          in: path
          description: Vendor number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected vendor was founn and the requested property was returned)
          schema:
            type: integer
        '404':
          description: Not found (the specified vendor was not found)

  '/Vendors({key})/Contact':

    get:
      summary: Get vendor property Contact
      description: Get vendor property Contact via complete primary key.
      operationId: VendorContact
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: key
          in: path
          description: Vendor number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected vendor was founn and the requested property was returned)
          schema:
            type: string
        '404':
          description: Not found (the specified vendor was not found)

  '/Vendors({key})/Phone':

    get:
      summary: Get vendor property Phone
      description: Get vendor property Phone via complete primary key.
      operationId: VendorPhone
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: key
          in: path
          description: Vendor number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected vendor was founn and the requested property was returned)
          schema:
            type: integer
        '404':
          description: Not found (the specified vendor was not found)

  '/Vendors({key})/Fax':

    get:
      summary: Get vendor property Fax
      description: Get vendor property Fax via complete primary key.
      operationId: VendorFax
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: key
          in: path
          description: Vendor number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected vendor was founn and the requested property was returned)
          schema:
            type: integer
        '404':
          description: Not found (the specified vendor was not found)

  '/Vendors({key})/PaymentTermsCode':

    get:
      summary: Get vendor property PaymentTermsCode
      description: Get vendor property PaymentTermsCode via complete primary key.
      operationId: VendorPaymentTermsCode
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: key
          in: path
          description: Vendor number
          required: true
          type: integer
      responses:
        '200':
          description: OK (the selected vendor was founn and the requested property was returned)
          schema:
            type: string
        '404':
          description: Not found (the specified vendor was not found)
definitions:
  Customer:
    $ref: 'CustomerTypes.yaml#/Customer'
  Order:
    $ref: 'OrderTypes.yaml#/Order'
  Item:
    $ref: 'ItemTypes.yaml#/Item'
  OrderItem:
    $ref: 'OrderItemTypes.yaml#/OrderItem'
  Vendor:
    $ref: 'VendorTypes.yaml#/Vendor'
  PatchRequest:
    type: array
    items:
      $ref: '#/definitions/PatchDocument'
  PatchDocument:
    description: A JSONPatch document as defined by RFC 6902
    required:
      - op
      - path
    properties:
      op:
        type: string
        description: The operation to be performed
        enum:
          - add
          - remove
          - replace
          - move
          - copy
          - test
      path:
        type: string
        description: A JSON-Pointer
      value:
        type: object
        description: The value to be used within the operations.
      from:
        type: string
        description: A string containing a JSON Pointer value.