# *****************************************************************************
#
#  Title:       SwaggerFile.yaml
# 
#  Description: Describes "Harmony Core Sample API" to Swagger UI
# 
# *****************************************************************************
#  WARNING: GENERATED CODE!
#  This file was generated by CodeGen. Avoid editing the file if possible.
#  Any changes you make will be lost of the file is re-generated.
# *****************************************************************************
# 
swagger: '2.0'

info:
  description: This environment presents an example of using Harmony Core to expose a collection of RESTful Web Service endpoints that allow you to interact with a small sample dataset.
  version: 1.0.0
  title: Harmony Core Sample API

host: 'localhost:8086'
basePath: /odata

schemes:
  - https

consumes:
  - application/json

produces:
  - application/json

tags:
  - name: Customers
    description: Operations related to Customer record

  - name: Items
    description: Operations related to Item master record

  - name: Orders
    description: Operations related to Orders

  - name: OrderItems
    description: Operations related to Order items

  - name: Vendors
    description: Operations related to Vendor record


paths:

  /Customers:

    get:
      summary: Get all customers
      description: Get all or a filtered collection of customers.
      operationId: GetCustomers
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'CustomerTypes.yaml#/Customer'

    post:
      summary: Create a customer
      description: Create a new customer. When using a POST operation the primary key value will be assigned automatically. The primary key properties can be ommitted from the data in the request body, but if present will be ignored and replaced by automatically generated values.
      operationId: PostCustomer
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: aCustomer
          in: body
          description: Data for customer to create.
          required: true
          schema:
            $ref: 'CustomerTypes.yaml#/CustomerPost'
      responses:
        '201':
          description: The customer was created. The data for the new customer will be included in the response body, including the auotmatically assigned primary key values, and the response will include a "Location" header indicating the URL that can be used to retrieve the newly created customer.
          schema:
            $ref: 'CustomerTypes.yaml#/Customer'
        '400':
          description: Bad request

  /Customers/$count:

    get:
      summary: Count customers
      description: Count all or a filtered collection of customers.
      operationId: CountCustomers
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Customers(CustomerNumber={aCustomerNumber})':

    get:
      summary: Get a single customer
      description: Get a customer via a complete primary key.
      operationId: GetCustomer
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: aCustomerNumber
          in: path
          description: Customer number
          required: true
          type: integer
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
      responses:
        '200':
          description: OK (the requested customer was found and returned)
          schema:
            $ref: 'CustomerTypes.yaml#/Customer'
        '404':
          description: Not found (the requested customer was not found)

    delete:
      summary: Delete customer
      description: Delete a customer via a complete primary key.
      operationId: DeleteCustomer
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: aCustomerNumber
          in: path
          description: Customer number
          required: true
          type: integer
      responses:
        '204':
          description: No content (the specified customer was deleted)
        '404':
          description: Not found content (the specified customer was not found)

    put:
      summary: Create or update customer
      description: Create or update a customer via a complete primary key.
      operationId: CreateOrUpdateCustomer
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: aCustomerNumber
          in: path
          description: Customer number
          required: true
          type: integer
        - name: aCustomer
          in: body
          description: Data for customer to create or update.
          required: true
          schema:
            $ref: 'CustomerTypes.yaml#/Customer'
      responses:
        '201':
          description: Created (the customer was created)
          schema:
            $ref: 'CustomerTypes.yaml#/Customer'
        '204':
          description: No Content (the customer was updated)
        '400':
          description: Bad request

    patch:
      summary: Patch customer
      description: Patch a customer via complete primary key.
      operationId: PatchCustomer
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: aCustomerNumber
          in: path
          description: Customer number
          required: true
          type: integer
        - name: aPatchDocument
          in: body
          description: JSON patch document describing the changes to make to the customer.
          required: true
          schema:
            $ref: '#/definitions/PatchRequest'
      responses:
        '204':
          description: No content (the specified customer was patched)
        '400':
          description: Bad request
        '404':
          description: Not found (the specified customer was not found)

  '/Customers(State=''{aState}'')':

    get:
      summary: Get customers
      description: Get a customers via complete alternate key State.
      operationId: GetCustomersByKeyState
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: aState
          in: path
          description: State
          required: true
          type: string
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'CustomerTypes.yaml#/Customer'

  '/Customers(State=''{aState}'')/$count':

    get:
      summary: Count customers
      description: Count customers via complete alternate key State.
      operationId: CountCustomersByKeyState
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: aState
          in: path
          description: State
          required: true
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Customers(ZipCode={aZipCode})':

    get:
      summary: Get customers
      description: Get a customers via complete alternate key Zip.
      operationId: GetCustomersByKeyZip
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: aZipCode
          in: path
          description: Zip code
          required: true
          type: integer
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'CustomerTypes.yaml#/Customer'

  '/Customers(ZipCode={aZipCode})/$count':

    get:
      summary: Count customers
      description: Count customers via complete alternate key Zip.
      operationId: CountCustomersByKeyZip
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: aZipCode
          in: path
          description: Zip code
          required: true
          type: integer
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Customers(PaymentTermsCode=''{aPaymentTermsCode}'')':

    get:
      summary: Get customers
      description: Get a customers via complete alternate key PaymentTerms.
      operationId: GetCustomersByKeyPaymentTerms
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: aPaymentTermsCode
          in: path
          description: Payment terms code
          required: true
          type: string
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'CustomerTypes.yaml#/Customer'

  '/Customers(PaymentTermsCode=''{aPaymentTermsCode}'')/$count':

    get:
      summary: Count customers
      description: Count customers via complete alternate key PaymentTerms.
      operationId: CountCustomersByKeyPaymentTerms
      deprecated: false
      tags:
        - Customers
      parameters:
        - name: aPaymentTermsCode
          in: path
          description: Payment terms code
          required: true
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  /Items:

    get:
      summary: Get all items
      description: Get all or a filtered collection of items.
      operationId: GetItems
      deprecated: false
      tags:
        - Items
      parameters:
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'ItemTypes.yaml#/Item'

    post:
      summary: Create a item
      description: Create a new item. When using a POST operation the primary key value will be assigned automatically. The primary key properties can be ommitted from the data in the request body, but if present will be ignored and replaced by automatically generated values.
      operationId: PostItem
      deprecated: false
      tags:
        - Items
      parameters:
        - name: aItem
          in: body
          description: Data for item to create.
          required: true
          schema:
            $ref: 'ItemTypes.yaml#/ItemPost'
      responses:
        '201':
          description: The item was created. The data for the new item will be included in the response body, including the auotmatically assigned primary key values, and the response will include a "Location" header indicating the URL that can be used to retrieve the newly created item.
          schema:
            $ref: 'ItemTypes.yaml#/Item'
        '400':
          description: Bad request

  /Items/$count:

    get:
      summary: Count items
      description: Count all or a filtered collection of items.
      operationId: CountItems
      deprecated: false
      tags:
        - Items
      parameters:
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Items(ItemNumber={aItemNumber})':

    get:
      summary: Get a single item
      description: Get a item via a complete primary key.
      operationId: GetItem
      deprecated: false
      tags:
        - Items
      parameters:
        - name: aItemNumber
          in: path
          description: Item number
          required: true
          type: integer
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
      responses:
        '200':
          description: OK (the requested item was found and returned)
          schema:
            $ref: 'ItemTypes.yaml#/Item'
        '404':
          description: Not found (the requested item was not found)

    delete:
      summary: Delete item
      description: Delete a item via a complete primary key.
      operationId: DeleteItem
      deprecated: false
      tags:
        - Items
      parameters:
        - name: aItemNumber
          in: path
          description: Item number
          required: true
          type: integer
      responses:
        '204':
          description: No content (the specified item was deleted)
        '404':
          description: Not found content (the specified item was not found)

    put:
      summary: Create or update item
      description: Create or update a item via a complete primary key.
      operationId: CreateOrUpdateItem
      deprecated: false
      tags:
        - Items
      parameters:
        - name: aItemNumber
          in: path
          description: Item number
          required: true
          type: integer
        - name: aItem
          in: body
          description: Data for item to create or update.
          required: true
          schema:
            $ref: 'ItemTypes.yaml#/Item'
      responses:
        '201':
          description: Created (the item was created)
          schema:
            $ref: 'ItemTypes.yaml#/Item'
        '204':
          description: No Content (the item was updated)
        '400':
          description: Bad request

    patch:
      summary: Patch item
      description: Patch a item via complete primary key.
      operationId: PatchItem
      deprecated: false
      tags:
        - Items
      parameters:
        - name: aItemNumber
          in: path
          description: Item number
          required: true
          type: integer
        - name: aPatchDocument
          in: body
          description: JSON patch document describing the changes to make to the item.
          required: true
          schema:
            $ref: '#/definitions/PatchRequest'
      responses:
        '204':
          description: No content (the specified item was patched)
        '400':
          description: Bad request
        '404':
          description: Not found (the specified item was not found)

  '/Items(VendorNumber={aVendorNumber})':

    get:
      summary: Get items
      description: Get a items via complete alternate key VendorNumber.
      operationId: GetItemsByKeyVendorNumber
      deprecated: false
      tags:
        - Items
      parameters:
        - name: aVendorNumber
          in: path
          description: Vendor number
          required: true
          type: integer
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'ItemTypes.yaml#/Item'

  '/Items(VendorNumber={aVendorNumber})/$count':

    get:
      summary: Count items
      description: Count items via complete alternate key VendorNumber.
      operationId: CountItemsByKeyVendorNumber
      deprecated: false
      tags:
        - Items
      parameters:
        - name: aVendorNumber
          in: path
          description: Vendor number
          required: true
          type: integer
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Items(FlowerColor=''{aFlowerColor}'')':

    get:
      summary: Get items
      description: Get a items via complete alternate key Color.
      operationId: GetItemsByKeyColor
      deprecated: false
      tags:
        - Items
      parameters:
        - name: aFlowerColor
          in: path
          description: Flower color
          required: true
          type: string
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'ItemTypes.yaml#/Item'

  '/Items(FlowerColor=''{aFlowerColor}'')/$count':

    get:
      summary: Count items
      description: Count items via complete alternate key Color.
      operationId: CountItemsByKeyColor
      deprecated: false
      tags:
        - Items
      parameters:
        - name: aFlowerColor
          in: path
          description: Flower color
          required: true
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Items(Size={aSize})':

    get:
      summary: Get items
      description: Get a items via complete alternate key Size.
      operationId: GetItemsByKeySize
      deprecated: false
      tags:
        - Items
      parameters:
        - name: aSize
          in: path
          description: Size in gallons
          required: true
          type: integer
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'ItemTypes.yaml#/Item'

  '/Items(Size={aSize})/$count':

    get:
      summary: Count items
      description: Count items via complete alternate key Size.
      operationId: CountItemsByKeySize
      deprecated: false
      tags:
        - Items
      parameters:
        - name: aSize
          in: path
          description: Size in gallons
          required: true
          type: integer
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Items(CommonName=''{aCommonName}'')':

    get:
      summary: Get items
      description: Get a items via complete alternate key Name.
      operationId: GetItemsByKeyName
      deprecated: false
      tags:
        - Items
      parameters:
        - name: aCommonName
          in: path
          description: Common name
          required: true
          type: string
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'ItemTypes.yaml#/Item'

  '/Items(CommonName=''{aCommonName}'')/$count':

    get:
      summary: Count items
      description: Count items via complete alternate key Name.
      operationId: CountItemsByKeyName
      deprecated: false
      tags:
        - Items
      parameters:
        - name: aCommonName
          in: path
          description: Common name
          required: true
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  /Orders:

    get:
      summary: Get all orders
      description: Get all or a filtered collection of orders.
      operationId: GetOrders
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'OrderTypes.yaml#/Order'

    post:
      summary: Create a order
      description: Create a new order. When using a POST operation the primary key value will be assigned automatically. The primary key properties can be ommitted from the data in the request body, but if present will be ignored and replaced by automatically generated values.
      operationId: PostOrder
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: aOrder
          in: body
          description: Data for order to create.
          required: true
          schema:
            $ref: 'OrderTypes.yaml#/OrderPost'
      responses:
        '201':
          description: The order was created. The data for the new order will be included in the response body, including the auotmatically assigned primary key values, and the response will include a "Location" header indicating the URL that can be used to retrieve the newly created order.
          schema:
            $ref: 'OrderTypes.yaml#/Order'
        '400':
          description: Bad request

  /Orders/$count:

    get:
      summary: Count orders
      description: Count all or a filtered collection of orders.
      operationId: CountOrders
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Orders(OrderNumber={aOrderNumber})':

    get:
      summary: Get a single order
      description: Get a order via a complete primary key.
      operationId: GetOrder
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: aOrderNumber
          in: path
          description: Order number
          required: true
          type: integer
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
      responses:
        '200':
          description: OK (the requested order was found and returned)
          schema:
            $ref: 'OrderTypes.yaml#/Order'
        '404':
          description: Not found (the requested order was not found)

    delete:
      summary: Delete order
      description: Delete a order via a complete primary key.
      operationId: DeleteOrder
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: aOrderNumber
          in: path
          description: Order number
          required: true
          type: integer
      responses:
        '204':
          description: No content (the specified order was deleted)
        '404':
          description: Not found content (the specified order was not found)

    put:
      summary: Create or update order
      description: Create or update a order via a complete primary key.
      operationId: CreateOrUpdateOrder
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: aOrderNumber
          in: path
          description: Order number
          required: true
          type: integer
        - name: aOrder
          in: body
          description: Data for order to create or update.
          required: true
          schema:
            $ref: 'OrderTypes.yaml#/Order'
      responses:
        '201':
          description: Created (the order was created)
          schema:
            $ref: 'OrderTypes.yaml#/Order'
        '204':
          description: No Content (the order was updated)
        '400':
          description: Bad request

    patch:
      summary: Patch order
      description: Patch a order via complete primary key.
      operationId: PatchOrder
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: aOrderNumber
          in: path
          description: Order number
          required: true
          type: integer
        - name: aPatchDocument
          in: body
          description: JSON patch document describing the changes to make to the order.
          required: true
          schema:
            $ref: '#/definitions/PatchRequest'
      responses:
        '204':
          description: No content (the specified order was patched)
        '400':
          description: Bad request
        '404':
          description: Not found (the specified order was not found)

  '/Orders(CustomerNumber={aCustomerNumber})':

    get:
      summary: Get orders
      description: Get a orders via complete alternate key CustomerNumber.
      operationId: GetOrdersByKeyCustomerNumber
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: aCustomerNumber
          in: path
          description: Customer number
          required: true
          type: integer
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'OrderTypes.yaml#/Order'

  '/Orders(CustomerNumber={aCustomerNumber})/$count':

    get:
      summary: Count orders
      description: Count orders via complete alternate key CustomerNumber.
      operationId: CountOrdersByKeyCustomerNumber
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: aCustomerNumber
          in: path
          description: Customer number
          required: true
          type: integer
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Orders(DateOrdered={aDateOrdered})':

    get:
      summary: Get orders
      description: Get a orders via complete alternate key DateOrdered.
      operationId: GetOrdersByKeyDateOrdered
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: aDateOrdered
          in: path
          description: Date ordered
          required: true
          type: string
          format: date-time
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'OrderTypes.yaml#/Order'

  '/Orders(DateOrdered={aDateOrdered})/$count':

    get:
      summary: Count orders
      description: Count orders via complete alternate key DateOrdered.
      operationId: CountOrdersByKeyDateOrdered
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: aDateOrdered
          in: path
          description: Date ordered
          required: true
          type: string
          format: date-time
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Orders(DateCompleted={aDateCompleted})':

    get:
      summary: Get orders
      description: Get a orders via complete alternate key DateCompleted.
      operationId: GetOrdersByKeyDateCompleted
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: aDateCompleted
          in: path
          description: Date order completed
          required: true
          type: string
          format: date-time
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'OrderTypes.yaml#/Order'

  '/Orders(DateCompleted={aDateCompleted})/$count':

    get:
      summary: Count orders
      description: Count orders via complete alternate key DateCompleted.
      operationId: CountOrdersByKeyDateCompleted
      deprecated: false
      tags:
        - Orders
      parameters:
        - name: aDateCompleted
          in: path
          description: Date order completed
          required: true
          type: string
          format: date-time
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  /OrderItems:

    get:
      summary: Get all orderItems
      description: Get all or a filtered collection of orderItems.
      operationId: GetOrderItems
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'OrderItemTypes.yaml#/OrderItem'

    post:
      summary: Create a orderItem
      description: Create a new orderItem. When using a POST operation the primary key value will be assigned automatically. The primary key properties can be ommitted from the data in the request body, but if present will be ignored and replaced by automatically generated values.
      operationId: PostOrderItem
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: aOrderItem
          in: body
          description: Data for orderItem to create.
          required: true
          schema:
            $ref: 'OrderItemTypes.yaml#/OrderItemPost'
      responses:
        '201':
          description: The orderItem was created. The data for the new orderItem will be included in the response body, including the auotmatically assigned primary key values, and the response will include a "Location" header indicating the URL that can be used to retrieve the newly created orderItem.
          schema:
            $ref: 'OrderItemTypes.yaml#/OrderItem'
        '400':
          description: Bad request

  /OrderItems/$count:

    get:
      summary: Count orderItems
      description: Count all or a filtered collection of orderItems.
      operationId: CountOrderItems
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/OrderItems(OrderNumber={aOrderNumber},ItemNumber={aItemNumber})':

    get:
      summary: Get a single orderItem
      description: Get a orderItem via a complete primary key.
      operationId: GetOrderItem
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: aOrderNumber
          in: path
          description: Order number
          required: true
          type: integer
        - name: aItemNumber
          in: path
          description: Line item number
          required: true
          type: integer
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
      responses:
        '200':
          description: OK (the requested orderItem was found and returned)
          schema:
            $ref: 'OrderItemTypes.yaml#/OrderItem'
        '404':
          description: Not found (the requested orderItem was not found)

    delete:
      summary: Delete orderItem
      description: Delete a orderItem via a complete primary key.
      operationId: DeleteOrderItem
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: aOrderNumber
          in: path
          description: Order number
          required: true
          type: integer
        - name: aItemNumber
          in: path
          description: Line item number
          required: true
          type: integer
      responses:
        '204':
          description: No content (the specified orderItem was deleted)
        '404':
          description: Not found content (the specified orderItem was not found)

    put:
      summary: Create or update orderItem
      description: Create or update a orderItem via a complete primary key.
      operationId: CreateOrUpdateOrderItem
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: aOrderNumber
          in: path
          description: Order number
          required: true
          type: integer
        - name: aItemNumber
          in: path
          description: Line item number
          required: true
          type: integer
        - name: aOrderItem
          in: body
          description: Data for orderItem to create or update.
          required: true
          schema:
            $ref: 'OrderItemTypes.yaml#/OrderItem'
      responses:
        '201':
          description: Created (the orderItem was created)
          schema:
            $ref: 'OrderItemTypes.yaml#/OrderItem'
        '204':
          description: No Content (the orderItem was updated)
        '400':
          description: Bad request

    patch:
      summary: Patch orderItem
      description: Patch a orderItem via complete primary key.
      operationId: PatchOrderItem
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: aOrderNumber
          in: path
          description: Order number
          required: true
          type: integer
        - name: aItemNumber
          in: path
          description: Line item number
          required: true
          type: integer
        - name: aPatchDocument
          in: body
          description: JSON patch document describing the changes to make to the orderItem.
          required: true
          schema:
            $ref: '#/definitions/PatchRequest'
      responses:
        '204':
          description: No content (the specified orderItem was patched)
        '400':
          description: Bad request
        '404':
          description: Not found (the specified orderItem was not found)

  '/OrderItems(ItemOrdered={aItemOrdered})':

    get:
      summary: Get orderItems
      description: Get a orderItems via complete alternate key ItemOrdered.
      operationId: GetOrderItemsByKeyItemOrdered
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: aItemOrdered
          in: path
          description: Item ordered
          required: true
          type: integer
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'OrderItemTypes.yaml#/OrderItem'

  '/OrderItems(ItemOrdered={aItemOrdered})/$count':

    get:
      summary: Count orderItems
      description: Count orderItems via complete alternate key ItemOrdered.
      operationId: CountOrderItemsByKeyItemOrdered
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: aItemOrdered
          in: path
          description: Item ordered
          required: true
          type: integer
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/OrderItems(DateShipped={aDateShipped})':

    get:
      summary: Get orderItems
      description: Get a orderItems via complete alternate key DateShipped.
      operationId: GetOrderItemsByKeyDateShipped
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: aDateShipped
          in: path
          description: Date shipped
          required: true
          type: string
          format: date-time
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'OrderItemTypes.yaml#/OrderItem'

  '/OrderItems(DateShipped={aDateShipped})/$count':

    get:
      summary: Count orderItems
      description: Count orderItems via complete alternate key DateShipped.
      operationId: CountOrderItemsByKeyDateShipped
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: aDateShipped
          in: path
          description: Date shipped
          required: true
          type: string
          format: date-time
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/OrderItems(InvoiceNumber={aInvoiceNumber})':

    get:
      summary: Get orderItems
      description: Get a orderItems via complete alternate key InvoiceNumber.
      operationId: GetOrderItemsByKeyInvoiceNumber
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: aInvoiceNumber
          in: path
          description: Invoice number
          required: true
          type: integer
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'OrderItemTypes.yaml#/OrderItem'

  '/OrderItems(InvoiceNumber={aInvoiceNumber})/$count':

    get:
      summary: Count orderItems
      description: Count orderItems via complete alternate key InvoiceNumber.
      operationId: CountOrderItemsByKeyInvoiceNumber
      deprecated: false
      tags:
        - OrderItems
      parameters:
        - name: aInvoiceNumber
          in: path
          description: Invoice number
          required: true
          type: integer
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  /Vendors:

    get:
      summary: Get all vendors
      description: Get all or a filtered collection of vendors.
      operationId: GetVendors
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'VendorTypes.yaml#/Vendor'

    post:
      summary: Create a vendor
      description: Create a new vendor. When using a POST operation the primary key value will be assigned automatically. The primary key properties can be ommitted from the data in the request body, but if present will be ignored and replaced by automatically generated values.
      operationId: PostVendor
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: aVendor
          in: body
          description: Data for vendor to create.
          required: true
          schema:
            $ref: 'VendorTypes.yaml#/VendorPost'
      responses:
        '201':
          description: The vendor was created. The data for the new vendor will be included in the response body, including the auotmatically assigned primary key values, and the response will include a "Location" header indicating the URL that can be used to retrieve the newly created vendor.
          schema:
            $ref: 'VendorTypes.yaml#/Vendor'
        '400':
          description: Bad request

  /Vendors/$count:

    get:
      summary: Count vendors
      description: Count all or a filtered collection of vendors.
      operationId: CountVendors
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Vendors(VendorNumber={aVendorNumber})':

    get:
      summary: Get a single vendor
      description: Get a vendor via a complete primary key.
      operationId: GetVendor
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: aVendorNumber
          in: path
          description: Vendor number
          required: true
          type: integer
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
      responses:
        '200':
          description: OK (the requested vendor was found and returned)
          schema:
            $ref: 'VendorTypes.yaml#/Vendor'
        '404':
          description: Not found (the requested vendor was not found)

    delete:
      summary: Delete vendor
      description: Delete a vendor via a complete primary key.
      operationId: DeleteVendor
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: aVendorNumber
          in: path
          description: Vendor number
          required: true
          type: integer
      responses:
        '204':
          description: No content (the specified vendor was deleted)
        '404':
          description: Not found content (the specified vendor was not found)

    put:
      summary: Create or update vendor
      description: Create or update a vendor via a complete primary key.
      operationId: CreateOrUpdateVendor
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: aVendorNumber
          in: path
          description: Vendor number
          required: true
          type: integer
        - name: aVendor
          in: body
          description: Data for vendor to create or update.
          required: true
          schema:
            $ref: 'VendorTypes.yaml#/Vendor'
      responses:
        '201':
          description: Created (the vendor was created)
          schema:
            $ref: 'VendorTypes.yaml#/Vendor'
        '204':
          description: No Content (the vendor was updated)
        '400':
          description: Bad request

    patch:
      summary: Patch vendor
      description: Patch a vendor via complete primary key.
      operationId: PatchVendor
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: aVendorNumber
          in: path
          description: Vendor number
          required: true
          type: integer
        - name: aPatchDocument
          in: body
          description: JSON patch document describing the changes to make to the vendor.
          required: true
          schema:
            $ref: '#/definitions/PatchRequest'
      responses:
        '204':
          description: No content (the specified vendor was patched)
        '400':
          description: Bad request
        '404':
          description: Not found (the specified vendor was not found)

  '/Vendors(State=''{aState}'')':

    get:
      summary: Get vendors
      description: Get a vendors via complete alternate key State.
      operationId: GetVendorsByKeyState
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: aState
          in: path
          description: State
          required: true
          type: string
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'VendorTypes.yaml#/Vendor'

  '/Vendors(State=''{aState}'')/$count':

    get:
      summary: Count vendors
      description: Count vendors via complete alternate key State.
      operationId: CountVendorsByKeyState
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: aState
          in: path
          description: State
          required: true
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Vendors(ZipCode={aZipCode})':

    get:
      summary: Get vendors
      description: Get a vendors via complete alternate key Zip.
      operationId: GetVendorsByKeyZip
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: aZipCode
          in: path
          description: Zip Code
          required: true
          type: integer
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'VendorTypes.yaml#/Vendor'

  '/Vendors(ZipCode={aZipCode})/$count':

    get:
      summary: Count vendors
      description: Count vendors via complete alternate key Zip.
      operationId: CountVendorsByKeyZip
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: aZipCode
          in: path
          description: Zip Code
          required: true
          type: integer
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer

  '/Vendors(PaymentTermsCode=''{aPaymentTermsCode}'')':

    get:
      summary: Get vendors
      description: Get a vendors via complete alternate key PaymentTerms.
      operationId: GetVendorsByKeyPaymentTerms
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: aPaymentTermsCode
          in: path
          description: Payment terms code
          required: true
          type: string
        - name: $expand
          in: query
          description: Expand one or more navigation properties.
          type: string
        - name: $select
          in: query
          description: List of properties to be returned.
          type: string
        - name: $orderby
          in: query
          description: Order by some property
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
        - name: $top
          in: query
          description: Maximum number of rows to return.
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: 'VendorTypes.yaml#/Vendor'

  '/Vendors(PaymentTermsCode=''{aPaymentTermsCode}'')/$count':

    get:
      summary: Count vendors
      description: Count vendors via complete alternate key PaymentTerms.
      operationId: CountVendorsByKeyPaymentTerms
      deprecated: false
      tags:
        - Vendors
      parameters:
        - name: aPaymentTermsCode
          in: path
          description: Payment terms code
          required: true
          type: string
        - name: $filter
          in: query
          description: Filter expression to restrict returned rows.
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: integer
definitions:
  PatchRequest:
    type: array
    items:
      $ref: '#/definitions/PatchDocument'
  PatchDocument:
    description: A JSONPatch document as defined by RFC 6902
    required:
      - op
      - path
    properties:
      op:
        type: string
        description: The operation to be performed
        enum:
          - add
          - remove
          - replace
          - move
          - copy
          - test
      path:
        type: string
        description: A JSON-Pointer
      value:
        type: object
        description: The value to be used within the operations.
      from:
        type: string
        description: A string containing a JSON Pointer value.