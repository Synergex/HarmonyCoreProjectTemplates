;;*****************************************************************************
;;
;; Title:       GetEnvironmentDispatcher.dbl
;;
;; Description: Dispatcher class for calls to %GetEnvironment
;;
;;*****************************************************************************

import Harmony.TraditionalBridge
import Json
import System
import System.Collections

namespace TraditionalBridge.Dispatchers

    ;;; <summary>
    ;;; Dispatcher for %GetEnvironment
    ;;; </summary>
    public class GetLogicalNameDispatcher extends RoutineStub

        ;;; <summary>
        ;;; Dispatch to %GetLogicalName
        ;;; </summary>
        ;;; <param name="name"></param>
        ;;; <param name="callFrame"></param>
        ;;; <param name="serializer">Outbound data serializer</param>
        ;;; <param name="dispatcher"></param>
        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  @JsonObject
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher

            ;;Declare data for any parameters and/or return value
            record
                arguments,          @JsonArray
                logicalName,        a256
                returnValue,        string
            endrecord
        proc
            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = (@JsonArray)callFrame.GetProperty("params")

            ;;Argument 1 is the inbound logical name
            logicalName = dispatcher.GetText((@JsonObject)arguments.arrayValues[1])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %GetLogicalName(logicalName)

            ;;------------------------------------------------------------
            ;;Process outbound return value and parameters

            ;;Argument 0 is the return value
            serializer.ArgumentData(0, returnValue,FieldDataType.AlphaField,returnValue.Length,0,true)

        endmethod

    endclass

endnamespace
