
import System
import System.Collections.Generic
import System.Text
import Harmony.Core.Context
import Renci.SshNet

namespace Services

    ;;; <summary>
    ;;; Using this alternate RemoteExternalContextPool disables the reuse of contexts within a Traditional
    ;;; Bridge context pool in REMOTE environments. This should only be used as a last resort, in
    ;;; stateful environments where connections cannot be reused. Disabling pooling will negatively
    ;;; impact performance and scalability of the traditional bridge environment.
    ;;; </summary>
    public class BridgeNoContextReuseRemote<T(IContextBase, class)> extends RemoteExternalContextPool<T>

        public method BridgeNoContextReuseRemote
            targetOS, RemoteTargetOS
            targetMachine, @string
            username, @string
            authentication, @AuthenticationMethod
            targetCommand, @string
            minPoolSize, int
            maxPoolSize, int
            maxPoolWait, TimeSpan
            callTimeout, int
            connectTimeout, int
            enableDebug, boolean
            endparams
            parent(targetOS, targetMachine, username, authentication, targetCommand, minPoolSize, maxPoolSize, maxPoolWait, callTimeout, connectTimeout, enableDebug)
        proc
        endmethod

        ;;; <summary>
        ;;; Ensure that used contexts are not returned to the pool.
        ;;; </summary>
        ;;; <param name="context">The context being returned to the pool.</param>
        public override async method ReturnContext, void
            context, T
        proc
            data pooledContext = ^as(context, @IPooledContextBase)
            pooledContext?.Destroy()
        endmethod

    endclass

endnamespace
