;;*****************************************************************************
;;
;; Title:       BridgeAPIServiceModels.dbl
;;
;; Description: Request and response models for methods that are part of the
;;              former xfServerPlus / xfNetLink "BridgeAPI" interface.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Newtonsoft.Json
import System
import System.ComponentModel.DataAnnotations

import Services.Models

namespace BridgeAPI
.ifndef METHOD_STATUS
.include "METHOD_STATUS" repository, enum
.endc

;;--------------------------------------------------------------------------------
;; GetCustomer

    {JsonObject(MemberSerialization.OptIn)}
    ;;; <summary>
    ;;; Represents IN parameters for method BridgeAPI.GetCustomer.
    ;;; </summary>
    public class GetCustomer_Request

        {JsonProperty}
        {Required(ErrorMessage="CustomerID is required")}
        {Range(-999999,999999,ErrorMessage="CustomerID must be between -999999 and 999999")}
        ;;; <summary>
        ;;; Parameter 1 (REQUIRED IN d6)
        ;;; Customer ID
        ;;; </summary>
        public readwrite property CustomerID, int

    endclass

    {JsonObject(MemberSerialization.OptIn)}
    ;;; <summary>
    ;;; Represents OUT parameters and return value for method BridgeAPI.GetCustomer.
    ;;; </summary>
    public class GetCustomer_Response

        {JsonProperty}
        ;;; <summary>
        ;;; Return value
        ;;; </summary>
        public ReturnValue, string

        {JsonProperty}
        ;;; <summary>
        ;;; Parameter 2 (REQUIRED OUT CUSTOMERS)
        ;;; Customer record
        ;;; </summary>
        public CustomerRecord, @Customers

        {JsonProperty}
        ;;; <summary>
        ;;; Parameter 3 (REQUIRED OUT string)
        ;;; Error message if result is ERROR
        ;;; </summary>
        public ErrorMessage, string

    endclass


;;--------------------------------------------------------------------------------
;; GetEnvironment
    ;; This method has no in parameters

    {JsonObject(MemberSerialization.OptIn)}
    ;;; <summary>
    ;;; Represents OUT parameters and return value for method BridgeAPI.GetEnvironment.
    ;;; </summary>
    public class GetEnvironment_Response

        {JsonProperty}
        ;;; <summary>
        ;;; Return value
        ;;; </summary>
        public ReturnValue, string

        {JsonProperty}
        ;;; <summary>
        ;;; Parameter 1 (REQUIRED OUT string)
        ;;; Returned environment string
        ;;; </summary>
        public EnvironmentString, string

        {JsonProperty}
        ;;; <summary>
        ;;; Parameter 2 (REQUIRED OUT string)
        ;;; Returned error message if return value is ERROR
        ;;; </summary>
        public ErrorMessage, string

    endclass


;;--------------------------------------------------------------------------------
;; GetLogicalName

    {JsonObject(MemberSerialization.OptIn)}
    ;;; <summary>
    ;;; Represents IN parameters for method BridgeAPI.GetLogicalName.
    ;;; </summary>
    public class GetLogicalName_Request

        {JsonProperty}
        {Required(ErrorMessage="LogicalName is required")}
        ;;; <summary>
        ;;; Parameter 1 (REQUIRED IN string)
        ;;; No description found in method catalog
        ;;; </summary>
        public readwrite property LogicalName, string

    endclass

    {JsonObject(MemberSerialization.OptIn)}
    ;;; <summary>
    ;;; Represents OUT parameters and return value for method BridgeAPI.GetLogicalName.
    ;;; </summary>
    public class GetLogicalName_Response

        {JsonProperty}
        ;;; <summary>
        ;;; Return value
        ;;; </summary>
        public ReturnValue, string

        {JsonProperty}
        ;;; <summary>
        ;;; Parameter 2 (REQUIRED OUT string)
        ;;; Returned value of logical name
        ;;; </summary>
        public TranslatedValue, string

        {JsonProperty}
        ;;; <summary>
        ;;; Parameter 3 (REQUIRED OUT string)
        ;;; Returned error message if return value is ERROR
        ;;; </summary>
        public ErrorMessage, string

    endclass


;;--------------------------------------------------------------------------------
;; LoremIpsumBridge

    {JsonObject(MemberSerialization.OptIn)}
    ;;; <summary>
    ;;; Represents IN parameters for method BridgeAPI.LoremIpsumBridge.
    ;;; </summary>
    public class LoremIpsumBridge_Request

        {JsonProperty}
        {Required(ErrorMessage="RecordsToReturn is required")}
        {Range(-2147483648,2147483647,ErrorMessage="RecordsToReturn must be between -2147483648 and 2147483647")}
        ;;; <summary>
        ;;; Parameter 1 (REQUIRED IN i4)
        ;;; No description found in method catalog
        ;;; </summary>
        public readwrite property RecordsToReturn, int

    endclass

    {JsonObject(MemberSerialization.OptIn)}
    ;;; <summary>
    ;;; Represents OUT parameters and return value for method BridgeAPI.LoremIpsumBridge.
    ;;; </summary>
    public class LoremIpsumBridge_Response

        {JsonProperty}
        ;;; <summary>
        ;;; Return value
        ;;; </summary>
        public ReturnValue, string

        {JsonProperty}
        ;;; <summary>
        ;;; Parameter 2 (REQUIRED OUT @ArrayList)
        ;;; Returned records
        ;;; </summary>
        public Records, [#]string

        {JsonProperty}
        ;;; <summary>
        ;;; Parameter 3 (REQUIRED OUT string)
        ;;; Error message if return value is ERROR
        ;;; </summary>
        public ErrorMessage, string

    endclass


;;--------------------------------------------------------------------------------
;; StuckProcessTest

    {JsonObject(MemberSerialization.OptIn)}
    ;;; <summary>
    ;;; Represents IN parameters for method BridgeAPI.StuckProcessTest.
    ;;; </summary>
    public class StuckProcessTest_Request

        {JsonProperty}
        {Required(ErrorMessage="SecondsToRun is required")}
        {Range(-9999,9999,ErrorMessage="SecondsToRun must be between -9999 and 9999")}
        ;;; <summary>
        ;;; Parameter 1 (REQUIRED IN d4)
        ;;; How many seconds should the test run for?
        ;;; </summary>
        public readwrite property SecondsToRun, int

    endclass

    {JsonObject(MemberSerialization.OptIn)}
    ;;; <summary>
    ;;; Represents OUT parameters and return value for method BridgeAPI.StuckProcessTest.
    ;;; </summary>
    public class StuckProcessTest_Response

        {JsonProperty}
        ;;; <summary>
        ;;; Return value
        ;;; </summary>
        public ReturnValue, string

        {JsonProperty}
        ;;; <summary>
        ;;; Parameter 2 (REQUIRED OUT string)
        ;;; Error message if ReturnValue is ERROR
        ;;; </summary>
        public ErrorMessage, string

    endclass

endnamespace
