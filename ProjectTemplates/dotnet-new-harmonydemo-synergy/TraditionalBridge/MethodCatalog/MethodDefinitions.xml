<?xml version='1.0'?>
<!--Generated by genxml v12.4.1 on 26-JUN-2025 16:04:39-->
<component name="MethodDefinitions" repository="C:\TEMP\HarmonyCore\Repository" smc="C:\TEMP\HarmonyCore\TraditionalBridge\smc" smcrev="5">
  <structure name="Customers" size="161">
    <primarykey segments="1">
      <segment field="Customer_number"/>
    </primarykey>
    <field name="Customer_number" type="decimal" size="6">
      <comment>
        <line1>Customer number</line1>
      </comment>
    </field>
    <field name="Name" type="alpha" size="30">
      <comment>
        <line1>Customer name</line1>
      </comment>
    </field>
    <field name="Street" type="alpha" size="25">
      <comment>
        <line1>Street address</line1>
      </comment>
    </field>
    <field name="City" type="alpha" size="20">
      <comment>
        <line1>City</line1>
      </comment>
    </field>
    <field name="State" type="alpha" size="2">
      <comment>
        <line1>State</line1>
      </comment>
    </field>
    <field name="Zip_code" type="decimal" size="9">
      <comment>
        <line1>Zip code</line1>
      </comment>
    </field>
    <field name="Contact" type="alpha" size="25">
      <comment>
        <line1>Contact name</line1>
      </comment>
    </field>
    <field name="Phone" type="decimal" size="10" heading="Phone Number">
      <comment>
        <line1>Phone number</line1>
      </comment>
    </field>
    <field name="Fax" type="decimal" size="10" heading="Phone Number">
      <comment>
        <line1>Fax number</line1>
      </comment>
    </field>
    <field name="Favorite_item" type="decimal" size="6">
      <comment>
        <line1>Customers favorite item</line1>
      </comment>
    </field>
    <field name="Payment_terms_code" type="alpha" size="2">
      <comment>
        <line1>Payment terms code</line1>
      </comment>
    </field>
    <field name="Tax_id" type="decimal" size="9">
      <comment>
        <line1>Customers tax ID number</line1>
      </comment>
    </field>
    <field name="Credit_limit" type="decimal" size="7" precision="2">
      <comment>
        <line1>Credit limit</line1>
      </comment>
    </field>
  </structure>
  <interface name="BridgeAPI">
    <method name="GetCustomer" id="GetCustomer" routine="GetCustomer" elb="EXE:bridgeapi">
      <comment>
        <line1>Get a customer</line1>
      </comment>
      <methodresult type="string" size="0">
        <comment>
          <line1>Returns OK or ERROR</line1>
        </comment>
      </methodresult>
      <param name="CustomerID" type="decimal" size="6">
        <comment>
          <line1>Customer ID</line1>
        </comment>
      </param>
      <param name="CustomerRecord" type="structure" structureName="Customers" dir="out">
        <comment>
          <line1>Customer record</line1>
        </comment>
      </param>
      <param name="ErrorMessage" type="string" size="0" dir="out">
        <comment>
          <line1>Error message if result is ERROR</line1>
        </comment>
      </param>
    </method>
    <method name="GetEnvironment" id="GetEnvironment" routine="GetEnvironment" elb="EXE:bridgeapi">
      <comment>
        <line1>Display the servers Synergy environment</line1>
      </comment>
      <methodresult type="string" size="0">
        <comment>
          <line1>Return value OK or ERROR</line1>
        </comment>
      </methodresult>
      <param name="EnvironmentString" type="string" size="0" dir="out">
        <comment>
          <line1>Returned environment string</line1>
        </comment>
      </param>
      <param name="ErrorMessage" type="string" size="0" dir="out">
        <comment>
          <line1>Returned error message if return value is ERROR</line1>
        </comment>
      </param>
    </method>
    <method name="GetLogicalName" id="GetLogicalName" routine="GetLogicalName" elb="EXE:bridgeapi">
      <comment>
        <line1>Get the value of a server environment variable</line1>
      </comment>
      <methodresult type="string" size="0">
        <comment>
          <line1>Return value OK or ERROR</line1>
        </comment>
      </methodresult>
      <param name="LogicalName" type="string" size="0"/>
      <param name="TranslatedValue" type="string" size="0" dir="out">
        <comment>
          <line1>Returned value of logical name</line1>
        </comment>
      </param>
      <param name="ErrorMessage" type="string" size="0" dir="out">
        <comment>
          <line1>Returned error message if return value is ERROR</line1>
        </comment>
      </param>
    </method>
    <method name="LoremIpsumBridge" id="LoremIpsum" routine="LoremIpsum" elb="EXE:bridgeapi">
      <comment>
        <line1>A test method that returns Lorem Ipsum data</line1>
      </comment>
      <methodresult type="string" size="0">
        <comment>
          <line1>Returns OK or ERROR</line1>
        </comment>
      </methodresult>
      <param name="RecordsToReturn" type="integer" size="4"/>
      <param name="Records" type="string" size="0" dir="out" collection="System.ArrayList">
        <comment>
          <line1>Returned records</line1>
        </comment>
      </param>
      <param name="ErrorMessage" type="string" size="0" dir="out">
        <comment>
          <line1>Error message if return value is ERROR</line1>
        </comment>
      </param>
    </method>
    <method name="StuckProcessTest" id="StuckProcessTest" routine="StuckProcessTest" elb="EXE:bridgeapi">
      <comment>
        <line1>Test for the stuck process detection code</line1>
      </comment>
      <methodresult type="string" size="0">
        <comment>
          <line1>Returns OK or ERROR</line1>
        </comment>
      </methodresult>
      <param name="SecondsToRun" type="decimal" size="4">
        <comment>
          <line1>How many seconds should the test run for?</line1>
        </comment>
      </param>
      <param name="ErrorMessage" type="string" size="0" dir="out">
        <comment>
          <line1>Error message if ReturnValue is ERROR</line1>
        </comment>
      </param>
    </method>
  </interface>
</component>
