<?xml version='1.0'?>
<!--Generated by genxml v11.1.1i on 20-JAN-2022 16:43:07-->
<component name="MethodDefinitions" repository="D:\HarmonyCoreProjectTemplates\ProjectTemplates\dotnet-new-harmonydemo-synergy\Repository\bin\Debug" smc="D:\HarmonyCoreProjectTemplates\ProjectTemplates\dotnet-new-harmonydemo-synergy\TraditionalBridge\MethodCatalog" smcrev="5">
	<structure name="Customers" size="161">
		<primarykey segments="1">
			<segment field="Customer_number"/>
		</primarykey>
		<field name="Customer_number" type="decimal" size="6">
			<comment>
				<line1>Customer number</line1>
			</comment>
		</field>
		<field name="Name" type="alpha" size="30">
			<comment>
				<line1>Customer name</line1>
			</comment>
		</field>
		<field name="Street" type="alpha" size="25">
			<comment>
				<line1>Street address</line1>
			</comment>
		</field>
		<field name="City" type="alpha" size="20">
			<comment>
				<line1>City</line1>
			</comment>
		</field>
		<field name="State" type="alpha" size="2">
			<comment>
				<line1>State</line1>
			</comment>
		</field>
		<field name="Zip_code" type="decimal" size="9">
			<comment>
				<line1>Zip code</line1>
			</comment>
		</field>
		<field name="Contact" type="alpha" size="25">
			<comment>
				<line1>Contact name</line1>
			</comment>
		</field>
		<field name="Phone" type="decimal" size="10" heading="Phone Number">
			<comment>
				<line1>Phone number</line1>
			</comment>
		</field>
		<field name="Fax" type="decimal" size="10" heading="Phone Number">
			<comment>
				<line1>Fax number</line1>
			</comment>
		</field>
		<field name="Favorite_item" type="decimal" size="6">
			<comment>
				<line1>Customers favorite item</line1>
			</comment>
		</field>
		<field name="Payment_terms_code" type="alpha" size="2">
			<comment>
				<line1>Payment terms code</line1>
			</comment>
		</field>
		<field name="Tax_id" type="decimal" size="9">
			<comment>
				<line1>Customers tax ID number</line1>
			</comment>
		</field>
		<field name="Credit_limit" type="decimal" size="7" precision="2">
			<comment>
				<line1>Credit limit</line1>
			</comment>
		</field>
	</structure>
	<interface name="BridgeMethods">
		<method name="AddTwoNumbers" id="AddTwoNumbers" routine="AddTwoNumbers" elb="EXE:BridgeMethods">
			<comment>
				<line1>Add two numbers</line1>
			</comment>
			<param name="number1" type="decimal" size="28" precision="10">
				<comment>
					<line1>First number</line1>
				</comment>
			</param>
			<param name="number2" type="decimal" size="28" precision="2">
				<comment>
					<line1>Second number</line1>
				</comment>
			</param>
			<param name="result" type="decimal" size="28" precision="10" dir="out">
				<comment>
					<line1>Resulting number</line1>
				</comment>
			</param>
		</method>
		<method name="GetCustomer" id="GetCustomer" routine="GetCustomer" elb="EXE:BridgeMethods">
			<comment>
				<line1>Get a customer</line1>
			</comment>
			<param name="CustomerNumber" type="decimal" size="6"/>
			<param name="Customer" type="structure" structureName="Customers" dir="out">
				<comment>
					<line1>Returned customer</line1>
				</comment>
			</param>
		</method>
		<method name="GetEnvironment" id="GetEnvironment" routine="GetEnvironment" elb="EXE:BridgeMethods">
			<comment>
				<line1>Get environment string</line1>
			</comment>
			<methodresult type="string" size="0">
				<comment>
					<line1>Returned environment string</line1>
				</comment>
			</methodresult>
		</method>
		<method name="GetLogicalName" id="GetLogicalName" routine="GetLogicalName" elb="EXE:BridgeMethods">
			<comment>
				<line1>Get a logical names value</line1>
			</comment>
			<methodresult type="string" size="0"/>
			<param name="aLogicalName" type="string" size="0">
				<comment>
					<line1>Logical name</line1>
				</comment>
			</param>
		</method>
	</interface>
	<interface>
    <method name="XFPL_LOG" id="XFPL_LOG" routine="XFPL_LOG" elb="DBLDIR:xfpl_api">
      <comment>
        <line1>Write a message to the log file</line1>
      </comment>
      <param name="message" type="alpha" size="255"/>
    </method>
    <method name="XFPL_REGCLEANUP" id="XFPL_REGCLEANUP" routine="XFPL_REGCLEANUP" elb="DBLDIR:xfpl_api">
      <comment>
        <line1>release resources on session termination</line1>
      </comment>
      <param name="method" type="alpha" size="31"/>
    </method>
  </interface>
  <interface name="xfTest">
    <method name="function_one" id="xfpl_tst1" routine="function_one" elb="DBLDIR:xfpl_tst">
      <comment>
        <line1>test different basic parameter types</line1>
      </comment>
      <param name="p1" type="alpha" size="50"/>
      <param name="p2" type="decimal" size="5"/>
      <param name="p3" type="decimal" size="10" precision="3"/>
      <param name="p4" type="integer" size="4"/>
    </method>
    <method name="function_two" id="xfpl_tst2" routine="function_two" elb="DBLDIR:xfpl_tst">
      <comment>
        <line1>tests decimals and implied decimals</line1>
      </comment>
      <param name="p1" type="decimal" size="12" precision="2" dir="inout"/>
      <param name="p2" type="decimal" size="10" precision="5" dir="inout"/>
      <param name="p3" type="decimal" size="10" precision="5"/>
      <param name="p4" type="decimal" size="10" precision="2"/>
      <param name="p5" type="decimal" size="10"/>
      <param name="p6" type="decimal" size="7" precision="7" dir="inout"/>
      <param name="p7" type="decimal" size="5" precision="4"/>
      <param name="p8" type="decimal" size="8" dir="inout"/>
      <param name="p9" type="decimal" size="7" precision="1" dir="inout"/>
      <param name="p10" type="decimal" size="9"/>
    </method>
    <method name="function_four" id="xfpl_tst3" routine="function_four" elb="DBLDIR:xfpl_tst">
      <comment>
        <line1>tests alpha parameters</line1>
      </comment>
      <param name="p1" type="alpha" size="30" dir="inout"/>
      <param name="p2" type="alpha" size="30" dir="inout"/>
      <param name="p3" type="alpha" size="10" dir="inout"/>
      <param name="p4" type="alpha" size="50" dir="inout"/>
    </method>
    <method name="function_eight" id="xfpl_tst4" routine="function_eight" elb="DBLDIR:xfpl_tst">
      <comment>
        <line1>tests basic types and arrays of those types</line1>
      </comment>
      <param name="p1" type="alpha" size="5" dir="inout"/>
      <param name="p2" type="integer" size="4" dir="inout"/>
      <param name="p3" type="decimal" size="6" dir="inout"/>
      <param name="p4" type="alpha" size="5"/>
      <param name="p5" type="decimal" size="6" precision="3" dir="inout"/>
      <param name="p6" type="decimal" size="5" dim="1" dir="inout"/>
      <param name="p7" type="alpha" size="20" dim="1" dir="inout"/>
      <param name="p8" type="decimal" size="10" precision="3" dim="1" dir="inout"/>
      <param name="p9" type="integer" size="4" dim="1" dir="inout"/>
    </method>
    <method name="function_nine" id="xfpl_tst5" routine="function_nine" elb="DBLDIR:xfpl_tst">
      <comment>
        <line1>tests return and input/output parameters</line1>
      </comment>
      <methodresult type="alpha" size="9"/>
      <param name="p1" type="alpha" size="5" dir="inout"/>
      <param name="p2" type="alpha" size="5" dir="inout"/>
    </method>
    <method name="function_ten" id="xfpl_tst6" routine="function_ten" elb="DBLDIR:xfpl_tst">
      <comment>
        <line1>tests decimal return</line1>
      </comment>
      <methodresult type="decimal" size="9"/>
      <param name="p1" type="alpha" size="5"/>
      <param name="p2" type="alpha" size="5" dir="inout"/>
    </method>
    <method name="get_verno_tst" id="xfpl_tst7" routine="get_verno_tst" elb="DBLDIR:xfpl_tst">
      <comment>
        <line1>get the version number</line1>
      </comment>
      <param name="verno" type="alpha" size="30" dir="inout"/>
    </method>
  </interface>
</component>
